class Collection {
  constructor(data)
  {
    this.items = data || [];
  }
}

Collection.prototype.all = require('collect.js/dist/methods/all');
Collection.prototype.average = require('collect.js/dist/methods/average');
Collection.prototype.avg = require('collect.js/dist/methods/average');
Collection.prototype.chunk = require('collect.js/dist/methods/chunk');
Collection.prototype.collapse = require('collect.js/dist/methods/collapse');
Collection.prototype.combine = require('collect.js/dist/methods/combine');
Collection.prototype.concat = require('collect.js/dist/methods/concat');
Collection.prototype.contains = require('collect.js/dist/methods/contains');
Collection.prototype.count = require('collect.js/dist/methods/count');
Collection.prototype.crossJoin = require('collect.js/dist/methods/crossJoin');
Collection.prototype.dd = require('collect.js/dist/methods/dd');
Collection.prototype.diff = require('collect.js/dist/methods/diff');
Collection.prototype.diffAssoc = require('collect.js/dist/methods/diffAssoc');
Collection.prototype.diffKeys = require('collect.js/dist/methods/diffKeys');
Collection.prototype.dump = require('collect.js/dist/methods/dump');
Collection.prototype.each = require('collect.js/dist/methods/each');
Collection.prototype.eachSpread = require('collect.js/dist/methods/eachSpread');
Collection.prototype.every = require('collect.js/dist/methods/every');
Collection.prototype.except = require('collect.js/dist/methods/except');
Collection.prototype.filter = require('collect.js/dist/methods/filter');
Collection.prototype.first = require('collect.js/dist/methods/first');
Collection.prototype.firstWhere = require('collect.js/dist/methods/firstWhere');
Collection.prototype.flatMap = require('collect.js/dist/methods/flatMap');
Collection.prototype.flatten = require('collect.js/dist/methods/flatten');
Collection.prototype.flip = require('collect.js/dist/methods/flip');
Collection.prototype.forPage = require('collect.js/dist/methods/forPage');
Collection.prototype.forget = require('collect.js/dist/methods/forget');
Collection.prototype.get = require('collect.js/dist/methods/get');
Collection.prototype.groupBy = require('collect.js/dist/methods/groupBy');
Collection.prototype.has = require('collect.js/dist/methods/has');
Collection.prototype.implode = require('collect.js/dist/methods/implode');
Collection.prototype.intersect = require('collect.js/dist/methods/intersect');
Collection.prototype.intersectByKeys = require('collect.js/dist/methods/intersectByKeys');
Collection.prototype.isEmpty = require('collect.js/dist/methods/isEmpty');
Collection.prototype.isNotEmpty = require('collect.js/dist/methods/isNotEmpty');
Collection.prototype.keyBy = require('collect.js/dist/methods/keyBy');
Collection.prototype.keys = require('collect.js/dist/methods/keys');
Collection.prototype.last = require('collect.js/dist/methods/last');
Collection.prototype.macro = require('collect.js/dist/methods/macro');
Collection.prototype.map = require('collect.js/dist/methods/map');
Collection.prototype.mapSpread = require('collect.js/dist/methods/mapSpread');
Collection.prototype.mapToDictionary = require('collect.js/dist/methods/mapToDictionary');
Collection.prototype.mapInto = require('collect.js/dist/methods/mapInto');
Collection.prototype.mapToGroups = require('collect.js/dist/methods/mapToGroups');
Collection.prototype.mapWithKeys = require('collect.js/dist/methods/mapWithKeys');
Collection.prototype.max = require('collect.js/dist/methods/max');
Collection.prototype.median = require('collect.js/dist/methods/median');
Collection.prototype.merge = require('collect.js/dist/methods/merge');
Collection.prototype.min = require('collect.js/dist/methods/min');
Collection.prototype.mode = require('collect.js/dist/methods/mode');
Collection.prototype.nth = require('collect.js/dist/methods/nth');
Collection.prototype.only = require('collect.js/dist/methods/only');
Collection.prototype.pad = require('collect.js/dist/methods/pad');
Collection.prototype.partition = require('collect.js/dist/methods/partition');
Collection.prototype.pipe = require('collect.js/dist/methods/pipe');
Collection.prototype.pluck = require('collect.js/dist/methods/pluck');
Collection.prototype.pop = require('collect.js/dist/methods/pop');
Collection.prototype.prepend = require('collect.js/dist/methods/prepend');
Collection.prototype.pull = require('collect.js/dist/methods/pull');
Collection.prototype.push = require('collect.js/dist/methods/push');
Collection.prototype.put = require('collect.js/dist/methods/put');
Collection.prototype.random = require('collect.js/dist/methods/random');
Collection.prototype.reduce = require('collect.js/dist/methods/reduce');
Collection.prototype.reject = require('collect.js/dist/methods/reject');
Collection.prototype.reverse = require('collect.js/dist/methods/reverse');
Collection.prototype.search = require('collect.js/dist/methods/search');
Collection.prototype.shift = require('collect.js/dist/methods/shift');
Collection.prototype.shuffle = require('collect.js/dist/methods/shuffle');
Collection.prototype.slice = require('collect.js/dist/methods/slice');
Collection.prototype.sort = require('collect.js/dist/methods/sort');
Collection.prototype.sortBy = require('collect.js/dist/methods/sortBy');
Collection.prototype.sortByDesc = require('collect.js/dist/methods/sortByDesc');
Collection.prototype.splice = require('collect.js/dist/methods/splice');
Collection.prototype.split = require('collect.js/dist/methods/split');
Collection.prototype.sum = require('collect.js/dist/methods/sum');
Collection.prototype.take = require('collect.js/dist/methods/take');
Collection.prototype.tap = require('collect.js/dist/methods/tap');
Collection.prototype.times = require('collect.js/dist/methods/times');
Collection.prototype.toArray = require('collect.js/dist/methods/toArray');
Collection.prototype.toJson = require('collect.js/dist/methods/toJson');
Collection.prototype.transform = require('collect.js/dist/methods/transform');
Collection.prototype.unless = require('collect.js/dist/methods/unless');
Collection.prototype.union = require('collect.js/dist/methods/union');
Collection.prototype.unique = require('collect.js/dist/methods/unique');
Collection.prototype.unwrap = require('collect.js/dist/methods/unwrap');
Collection.prototype.values = require('collect.js/dist/methods/values');
Collection.prototype.when = require('collect.js/dist/methods/when');
Collection.prototype.where = require('collect.js/dist/methods/where');
Collection.prototype.whereIn = require('collect.js/dist/methods/whereIn');
Collection.prototype.whereNotIn = require('collect.js/dist/methods/whereNotIn');
Collection.prototype.wrap = require('collect.js/dist/methods/wrap');
Collection.prototype.zip = require('collect.js/dist/methods/zip');

// Custom
Collection.prototype.hasIn = require('./methods/hasIn');
Collection.prototype.getIn = require('./methods/getIn');
Collection.prototype.putIn = require('./methods/putIn');

export default Collection;
